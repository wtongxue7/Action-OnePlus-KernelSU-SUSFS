name: Build OnePlus_Kernel
on:
  workflow_dispatch:
    inputs:
      CPU:
        description: "分支"
        required: true
        default: 'sm8650'
      FEIL:
        description: "配置文件"
        required: true
        default: 'oneplus_ace5'
      CPUD:
        description: "处理器代号"
        required: true
        default: 'pineapple'
      ANDROID_VERSION:
        description: "内核安卓版本"
        required: true
        default: 'android14'
      KERNEL_VERSION:
        description: "内核版本"
        required: true
        default: '6.1'
      KERNEL_NAME:
        description: "自定义内核名称"
        required: true
        default: '-android14-11-o-g54d4b575ebf6'
#     KERNEL_VER:
#       description: "自定义版本"
#       required: true
#       default: 'default'
      kernelsu_variant:
        description: "选择 KSU"
        required: true
        type: choice
        options:
          - KSU
          - KSUN
          - MKSU
          - RKSU
          - MKSU-SKN
        default: KSU
      kernelsu_version:
        description: "选择 KSU 版本"
        required: true
        type: choice
        options:
          - tag[Releases]
          - main[Ci]
        default: main[Ci]
      SUSFS_ENABLED:
        description: "添加 SUSFS"
        required: true
        type: boolean
        default: true
      VFS_patch_ENABLED:
        description: "添加vfs补丁(New Hook)？"
        required: true
        type: boolean
        default: true
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: Configure Git
        run: |
         git config --global user.name "KFzZ"
         git config --global user.email "KFzZ0708@gmail.com"

      - name: Install dependencies
        run: |
         sudo apt update && sudo apt upgrade -y
         sudo apt install -y python3 git curl

      - name: Install repo tool
        run: |
         curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
         chmod a+x ~/repo
         sudo mv ~/repo /usr/local/bin/repo

      - name: Initialize repo and sync
        run: |
         mkdir kernel_workspace && cd kernel_workspace
         repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b refs/heads/oneplus/${{ github.event.inputs.CPU }} -m ${{ github.event.inputs.FEIL }}.xml --depth=1
         repo sync
         rm kernel_platform/common/android/abi_gki_protected_exports_* || echo "No protected exports!"
         rm kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"
         sed -i 's/ -dirty//g' kernel_platform/common/scripts/setlocalversion
         sed -i 's/ -dirty//g' kernel_platform/msm-kernel/scripts/setlocalversion
#        sed -i '$s|echo "\$res"|echo "$res-KFzZ"|' kernel_platform/common/scripts/setlocalversion            
#        sed -i '$s|echo "\$res"|echo "$res-KFzZ"|' kernel_platform/msm-kernel/scripts/setlocalversion

      - name: KSU & KSUN & MKSU & RKSU & MKSU-SKN Version
        run: |
         if [[ "${{ github.event.inputs.kernelsu_version }}" == "tag[Releases]" ]]; then
           echo "BRANCH=-" >> $GITHUB_ENV
         elif [[ "${{ github.event.inputs.kernelsu_version }}" == "main[Ci]" ]]; then
         if [[ "${{ github.event.inputs.kernelsu_variant }}" == "KSU" || "${{ github.event.inputs.kernelsu_variant }}" == "MKSU" || "${{ github.event.inputs.kernelsu_variant }}" == "RKSU" ]]; then
           echo "BRANCH=-s main" >> $GITHUB_ENV
         elif [[ "${{ github.event.inputs.kernelsu_variant }}" == "KSUN" ]]; then
            echo "BRANCH=-s next" >> $GITHUB_ENV
         elif [[ "${{ github.event.inputs.kernelsu_variant }}" == "MKSU-SKN" ]]; then
            echo "BRANCH=-s susfs_patch" >> $GITHUB_ENV
          fi
         fi

      - name: Add KernelSU
        if: ${{ github.event.inputs.kernelsu_variant == 'KSU' }}
        run: |
          cd kernel_workspace/kernel_platform
          curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash ${{ env.BRANCH }}

      - name: Add KernelSU-Next
        if: ${{ github.event.inputs.kernelsu_variant == 'KSUN' }}
        run: |
          cd kernel_workspace/kernel_platform
          curl -LSs "https://raw.githubusercontent.com/KernelSU-Next/KernelSU-Next/next/kernel/setup.sh" | bash ${{ env.BRANCH }}

      - name: Add Magic Mount KernelSU
        if: ${{ github.event.inputs.kernelsu_variant == 'MKSU' }}
        run: |
          cd kernel_workspace/kernel_platform
          curl -LSs "https://raw.githubusercontent.com/5ec1cff/KernelSU/main/kernel/setup.sh" | bash ${{ env.BRANCH }}

      - name: Add Rissu KernelSU
        if: ${{ github.event.inputs.kernelsu_variant == 'RKSU' }}
        run: |
          cd kernel_workspace/kernel_platform
          curl -LSs "https://raw.githubusercontent.com/rsuntk/KernelSU/main/kernel/setup.sh" | bash ${{ env.BRANCH }}

      - name: Add Magic Mount KernelSU-SKN
        if: ${{ github.event.inputs.kernelsu_variant == 'MKSU-SKN' }}
        run: |
          cd kernel_workspace/kernel_platform
          curl -LSs "https://raw.githubusercontent.com/ShirkNeko/KernelSU/susfs/kernel/setup.sh" | bash ${{ env.BRANCH }}
          
      - name: Apply SUSFS Patches KernelSU
        if: ${{ (github.event.inputs.kernelsu_variant == 'KSU') && github.event.inputs.SUSFS_ENABLED == 'true' }}
        run: |
          cd kernel_workspace
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}
          git clone https://github.com/TheWildJames/kernel_patches.git
          cd kernel_platform
          cp ../susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch ./KernelSU
          cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch ./common/
          cp ../susfs4ksu/kernel_patches/fs/* ./common/fs/
          cp ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/
          cd ./KernelSU
          patch -p1 --forward < 10_enable_susfs_for_ksu.patch || true
          cd ../common
          patch -p1 < 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch || true
          
      - name: Apply SUSFS Patches KernelSU-Next
        if: ${{ (github.event.inputs.kernelsu_variant == 'KSUN') && github.event.inputs.SUSFS_ENABLED == 'true' }}
        run: |
          cd kernel_workspace
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}
          git clone https://github.com/TheWildJames/kernel_patches.git
          cd kernel_platform
          cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch ./common/
          cp ../susfs4ksu/kernel_patches/fs/* ./common/fs/
          cp ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/
          cd ./KernelSU-Next
          cp ../../kernel_patches/next/kernel-patch-susfs-v1.5.7-to-KernelSU-Next.patch ./
          patch -p1 --forward < 0001-kernel-patch-susfs-v1.5.5-to-KernelSU-Next-v1.0.5.patch || true
          cd ../common
          patch -p1 < 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch || true

      - name: Apply SUSFS Patches Magic Mount KernelSU
        if: ${{ (github.event.inputs.kernelsu_variant == 'MKSU') && github.event.inputs.SUSFS_ENABLED == 'true' }}
        run: |
          cd kernel_workspace
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}
          git clone https://github.com/TheWildJames/kernel_patches.git
          cd kernel_platform
          cp ../susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch ./KernelSU/
          cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch ./common/
          cp ../susfs4ksu/kernel_patches/fs/* ./common/fs/
          cp ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/
          cd ./KernelSU
          patch -p1 --forward < 10_enable_susfs_for_ksu.patch || true
          cp ../../kernel_patches/mksu/mksu_susfs.patch ../KernelSU/
          patch -p1 < mksu_susfs.patch || true
          cp ../../kernel_patches/mksu/fix.patch ../KernelSU/
          patch -p1 < fix.patch || true
          cd ../common
          patch -p1 < 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch || true

      - name: Apply SUSFS Patches Rissu KernelSU
        if: ${{ (github.event.inputs.kernelsu_variant == 'RKSU') && github.event.inputs.SUSFS_ENABLED == 'true' }}
        run: |
          cd kernel_workspace
          git clone -b susfs-v1.5.5 https://github.com/rsuntk/KernelSU.git
          git clone https://github.com/TheWildJames/kernel_patches.git
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}
          cd kernel_platform
          cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch ./common/
          cp ../susfs4ksu/kernel_patches/fs/* ./common/fs/
          cp ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/
          cd ./KernelSU
          cp ../../KernelSU/kernel -r ./
          cd ../common
          patch -p1 < 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch || true

      - name: Apply SUSFS Patches MKSU-SKN
        if: ${{ (github.event.inputs.kernelsu_variant == 'MKSU-SKN') && github.event.inputs.SUSFS_ENABLED == 'true' }}
        run: |
          cd kernel_workspace
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}
          git clone https://github.com/TheWildJames/kernel_patches.git
          cd kernel_platform
          cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch ./common/
          cp ../susfs4ksu/kernel_patches/fs/* ./common/fs/
          cp ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/
          cd ./common
          patch -p1 < 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch || true
          
      - name: Apply Hide Stuff Patches
        if: ${{ github.event.inputs.SUSFS_ENABLED == 'true' }}
        run: |
          cd kernel_workspace/kernel_platform/common
          cp ../../kernel_patches/69_hide_stuff.patch ./
          patch -p1 -F 3 < 69_hide_stuff.patch

      - name: KernelSUver
#       if: github.event.inputs.KERNEL_VER == 'default'
        run: |
          if [[ "${{ github.event.inputs.kernelsu_variant }}" == "KSUN" ]]; then
            cd kernel_workspace/kernel_platform/KernelSU-Next 
            KSU_VERSION=$(( $(/usr/bin/git rev-list --count HEAD) + 10200 ))
            echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
            sed -i "s/DKSU_VERSION=11998/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile
          else
            cd kernel_workspace/kernel_platform/KernelSU
            KSU_VERSION=$(( $(/usr/bin/git rev-list --count HEAD) + 10200 ))
            echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
            sed -i "s/DKSU_VERSION=16/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile
          fi

#     - name: Cust KernelSUver
#       if: github.event.inputs.KERNEL_VER != 'default'
#       run: |
#         if [[ "${{ github.event.inputs.kernelsu_variant }}" == "KSUN" ]]; then
#           cd kernel_workspace/kernel_platform/KernelSU-Next 
#           sed -i "s/DKSU_VERSION=11998/DKSU_VERSION=${{ github.event.inputs.KERNEL_VER }}/" kernel/Makefile
#         else
#           cd kernel_workspace/kernel_platform/KernelSU
#           sed -i "s/DKSU_VERSION=16/DKSU_VERSION=${{ github.event.inputs.KERNEL_VER }}/" kernel/Makefile
#         fi

      - name: Apply New Hooks Patches
        if: ${{ github.event.inputs.VFS_patch_ENABLED == 'true' }}
        run: |
          cd kernel_workspace/kernel_platform/common
          cp ../../kernel_patches/hooks/new_hooks.patch ./
          patch -p1 -F 3 < new_hooks.patch

      - name: Add KSU Configuration Settings
        run: |
            cd kernel_workspace/kernel_platform
            echo "CONFIG_KSU=y" >> ./common/arch/arm64/configs/gki_defconfig

      - name: Set CONFIG_SUSFS To y
        if: ${{ github.event.inputs.VFS_patch_ENABLED != 'true' && github.event.inputs.SUSFS_ENABLED == 'true' }}
        run: |
          cd kernel_workspace/kernel_platform
            echo "CONFIG_KSU_SUSFS_SUS_SU=y" >> ./common/arch/arm64/configs/gki_defconfig

      - name: Set CONFIG_SUSFS To n
        if: ${{ github.event.inputs.VFS_patch_ENABLED == 'true' }}
        run: |
          cd kernel_workspace/kernel_platform
            echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> ./common/arch/arm64/configs/gki_defconfig

      - name: Add SUSFS Configuration Settings
        if: ${{ github.event.inputs.SUSFS_ENABLED == 'true' }}
        run: |
            cd kernel_workspace/kernel_platform
              echo "CONFIG_KSU_SUSFS=y" >> ./common/arch/arm64/configs/gki_defconfig
              echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
              echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./common/arch/arm64/configs/gki_defconfig
              echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
              echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
              echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
              echo "CONFIG_KSU_SUSFS_SUS_KSTAT=n" >> ./common/arch/arm64/configs/gki_defconfig
              echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n" >> ./common/arch/arm64/configs/gki_defconfig
              echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
              echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
              echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./common/arch/arm64/configs/gki_defconfig
              echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./common/arch/arm64/configs/gki_defconfig
              echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./common/arch/arm64/configs/gki_defconfig
              echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./common/arch/arm64/configs/gki_defconfig
              echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./common/arch/arm64/configs/gki_defconfig

      - name: Add VFS Configuration Settings
        if: ${{ github.event.inputs.VFS_patch_ENABLED == 'true' }}
        run: |
         cd kernel_workspace/kernel_platform
         echo "CONFIG_KSU_HOOK=y" >> ./common/arch/arm64/configs/gki_defconfig
         echo "CONFIG_KSU_WITH_KPROBES=n" >> ./common/arch/arm64/configs/gki_defconfig
         
      - name: Remove check_defconfig
        run: |
          cd kernel_workspace/kernel_platform
          sed -i 's/check_defconfig//' ./common/build.config.gki

      - name: Add make name
        run: |
         cd kernel_workspace/kernel_platform
         sed -i '$s|echo "\$res"|echo "\${{ github.event.inputs.KERNEL_NAME }}"|' ./common/scripts/setlocalversion
         sed -i "/stable_scmversion_cmd/s/-maybe-dirty//g" ./build/kernel/kleaf/impl/stamp.bzl
  
      - name: Build kernel
        if: github.event.inputs.CPU == 'sm8650' 
        run: |
         cd kernel_workspace
         ./kernel_platform/build_with_bazel.py -t ${{ github.event.inputs.CPUD }} gki
          
      - name: Fallback build kernel
        if: github.event.inputs.CPU != 'sm8650' 
        run: |
         cd kernel_workspace
         LTO=thin ./kernel_platform/oplus/build/oplus_build_kernel.sh ${{ github.event.inputs.CPUD }} gki
         
      - name: Make AnyKernel3
        run: |
         git clone https://github.com/Kernel-SU/AnyKernel3 --depth=1
         rm -rf ./AnyKernel3/.git
         cp kernel_workspace/kernel_platform/out/msm-kernel-${{ github.event.inputs.CPUD }}-gki/dist/Image ./AnyKernel3/
         cp kernel_workspace/kernel_platform/out/msm-kernel-${{ github.event.inputs.CPUD }}-gki/dist/Image ./kernel_workspace/kernel
         
      - name: Upload AnyKernel3
        uses: actions/upload-artifact@v4
        with:
         name: AnyKernel3-KernelSU_${{ env.KSUVER }}_${{ github.event.inputs.FEIL }}
         path: ./AnyKernel3/*

      - name: Upload Image
        uses: actions/upload-artifact@v4
        with:
         name: Image-KernelSU_${{ env.KSUVER }}_${{ github.event.inputs.FEIL }}
         path: kernel_workspace/kernel
